The provided information is parsed via the input file using the structure presented.
The scripts for a user-based input approach is also included but commented out.
A debugging error message for mismatches between N and the provided number of points is also commented out.

The scripts takes the given pizzeria positions and delivery distance to generate the delivery region.
 - The concept of broadcasting is used to generate a region in the desired shape.
 - The center of the shape is the location of the pizzeria.
 - The delivery region is based on the delivery distance from the center. 
 - The size of the array is based on the maximum delivery distance from the center, therefore, depending on the location and delivery range the pizzeria array can be smaller or larger than the grid. 

Each pizzeria is dealt with separately.
 - A smaller set of arrays is generated for each pizzeria with its associated delivery region.
 - Initially, a N x N grid is an array of zeros is generated for each pizzeria (i.e., the grid).
 - The pizzeria location and deliverable tiles have an integer value of one in the mask.
 - The idea of inserting a smaller array (i.e., pizzeria regions) into a larger (i.e., grid) draws inspiration from the concept of placing a mask over an image.

Sometimes the mask may exist outside the boundaries of the image depending on the center of the mask (i.e., the pizzeria location).
 -The primary challenge of this problem was addressing the aforementioned instance when regions of the masks exist outside the grid.

Once a grid is generated for each pizzeria, it must be rotated to shift the origin to the bottom left corner.
After appropriate orientation, because each array constitutes of zeros and ones they can simply be summed together to find the resultant grid.
Finally, the maximum value of the array (i.e., the location with the highest number of potential deliveries) is located.